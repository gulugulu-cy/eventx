name: Deploy Fullstack Container

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F '/' '{print $2}' | sed 's/\.git$//')
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${REPO_NAME}-fullstack" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t $DOCKER_USER/${{ env.IMAGE_NAME }}:latest \
            --push .

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            #!/bin/bash
            set -eo pipefail
            IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}"
            CONTAINER_NAME="${{ env.REPO_NAME }}-container"

            # 清理旧容器
            docker stop ${CONTAINER_NAME} 2>/dev/null || true
            docker rm ${CONTAINER_NAME} 2>/dev/null || true

            # 检查端口占用
            if docker ps --format '{{.Ports}}' | grep -q ':8083->'; then
              echo "❌ 错误：8083端口被其他容器占用"
              exit 1
            fi

            # 拉取镜像
            docker pull ${IMAGE_NAME}:latest || {
              echo "❌ 错误：镜像拉取失败"
              exit 1
            }

            # 启动容器
            docker run -d \
              --name ${CONTAINER_NAME} \
              --restart unless-stopped \
              --health-cmd="curl -f http://localhost:80/assets/ || exit 1" \
              --health-interval=30s \
              -p 8083:80 \
              -v /resource:/resource \
              ${IMAGE_NAME}:latest

            echo "✅ 部署成功！访问地址: http://${{ secrets.SERVER_IP }}:8083"